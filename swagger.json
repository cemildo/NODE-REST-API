{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Web REST API",
      "description": "Simple rest api with crud operations.",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "207.154.241.114:5000",
    "basePath": "/api/",
    "tags": [
      {
        "name": "Users",
        "description": "API for members in the system"
      }
    ],
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/members": {
        "post": {
          "tags": [
            "Users"
          ],
          "description": "Create new user in system",
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "get": {
          "tags": [
            "Members"
          ],
          "summary": "Get all members in system",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
          }
        }
      },
      "/members/{personNr}": {
        "parameters": [
          {
            "name": "personNr",
            "in": "path",
            "required": true,
            "description": "ID of user that we want to find",
            "type": "number"
          }
        ],
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get user with given ID",
          "responses": {
            "200": {
              "description": "User is found",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "delete": {
          "summary": "Delete user with given ID",
          "tags": [
            "Users"
          ],
          "responses": {
            "200": {
              "description": "User is deleted",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "put": {
          "summary": "Update user with give ID",
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User with new values of properties",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User is updated",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "definitions": {
        "User": {
          "required": [
            "email",
            "_id"
          ],
          "properties": {
            "_id": {
              "type": "string",
              "uniqueItems": true
            },
            "email": {
              "type": "string",
              "uniqueItems": true
            },
            "lastName": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            }
          }
        },
        "Users": {
          "type": "array",
          "$ref": "#/definitions/User"
        }
      } 
  }